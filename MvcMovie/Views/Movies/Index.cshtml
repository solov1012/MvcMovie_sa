@model IndexViewModel
@using MvcMovie.Models;
@using System.Net;
@using System.IO;
@using static MvcMovie.HelpClass;
@using Newtonsoft.Json;

<style>
    @@font-face {
        font-family: 'FontAwesome';
        src: url('https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/fonts/fontawesome-webfont.woff2') format('woff2'), url('https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/fonts/fontawesome-webfont.woff') format('woff'), url('https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/fonts/fontawesome-webfont.ttf') format('truetype');
        font-weight: normal;
        font-style: normal
    }

    .glyphicon {
        display: inline-block;
        font: normal normal normal 14px/1 FontAwesome;
        font-size: inherit;
        text-rendering: auto;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale
    }

    .glyphicon-chevron-right:before {
        content: "\f054";
    }

    .glyphicon-chevron-left:before {
        content: "\f053";
    }
</style>

@{
    ViewData["Title"] = "Index";
    string apiKey = "7c62e35c7db3b5dc34f383e4b9603d99";
}

<h2>Index</h2>

<form asp-controller="Movies" asp-action="Index" method="get">
    <p>
        Title: <input type="text" name="id" value="@ViewData["currentFilter1"]">
        Actor/Director: <input type="text" name="searchActor" value="@ViewData["currentFilter2"]">>
        Tag: <input type="text" name="searchTag" value="@ViewData["currentFilter3"]">>
        <input type="submit" value="Filter" />
    </p>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                Id
            </th>
            <th>
                Name
            </th>
            <th>

            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Movies)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.Name)</a>
                </td>
                <td>
                    @{
                        HttpWebRequest apiRequest = WebRequest.Create("https://api.themoviedb.org/3/search/movie?api_key=" + apiKey + "&language=en-US&query=" + item.Name + "&page=" + 1 + "&include_adult=false") as HttpWebRequest;
                        string apiResponse = "";
                        using (HttpWebResponse response = apiRequest.GetResponse() as HttpWebResponse)
                        {
                            StreamReader reader = new StreamReader(response.GetResponseStream());
                            apiResponse = reader.ReadToEnd();
                        }
                        string image;
                        ResponseSearchMovies rootObject = JsonConvert.DeserializeObject<ResponseSearchMovies>(apiResponse);
                        try { image = "https://image.tmdb.org/t/p/w92/" + rootObject.results[0].poster_path; } catch { image = "no picture"; }
                    }
                    <p><img src="@image"></p>
                </td>
            </tr>
        }
    </tbody>
</table>
@if (Model.PageViewModel.HasPreviousPage)
{
    <a asp-action="Index"
       asp-route-page="@(Model.PageViewModel.PageNumber - 1)"
       class="btn btn-outline-dark">
        <i class="glyphicon glyphicon-chevron-left"></i>
        Назад
    </a>
}
@if (Model.PageViewModel.HasNextPage)
{
    <a asp-action="Index"
       asp-route-page="@(Model.PageViewModel.PageNumber + 1)"
       class="btn btn-outline-dark">
        Вперед
        <i class="glyphicon glyphicon-chevron-right"></i>
    </a>
}
